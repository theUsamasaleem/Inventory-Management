
package sadhanapharmacy;


import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.sql.*;
import java.text.DecimalFormat;
import javax.swing.*;
import net.proteanit.sql.DbUtils;



public class Items extends javax.swing.JFrame {

    Connection  con;
    String      url;
     
    PreparedStatement pst;
    Statement   st;
    ResultSet   rs;
    
    String combovalue; //holds the value of the Search by combobox, for example, Search by Item Name, Expiry, etc
    Float revenue; //holds the total amount of sold items, and will be used to update the Revenue table 
   


    
    public Items() {
        
        
        

        initComponents();
        
        setFullScreen();
        
        database();
        
        updateTable(); //called whenever a key is entered in the search box, or when items are added or removed
        
        
        
        
       }
    
    
    
    
    
    
    
    
    private void setFullScreen() {
        Toolkit kit = Toolkit.getDefaultToolkit();
        Dimension screenSize = kit.getScreenSize();
        setSize(screenSize.width, screenSize.height);
        
    }
    
    

    
    

    private void updateTable(){                                                 
        try{
       
            st = con.createStatement();
            String sql = "Select ItemName, BatchNumber, Expiry, Amount, Quantity from Item Order By Expiry";
            rs = st.executeQuery(sql);
        
       
            tblItem.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    
    
    
    
    
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lBack = new javax.swing.JLabel();
        bAdd = new javax.swing.JButton();
        bDelete = new javax.swing.JButton();
        lName = new javax.swing.JLabel();
        lBatchNumber = new javax.swing.JLabel();
        lExpiry = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        tfBatchNumber = new javax.swing.JTextField();
        tfExpiry = new javax.swing.JTextField();
        bClear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblItem = new javax.swing.JTable();
        tfSearchBy = new javax.swing.JTextField();
        lSearchBy = new javax.swing.JLabel();
        lAmount = new javax.swing.JLabel();
        lQuantity = new javax.swing.JLabel();
        tfAmount = new javax.swing.JTextField();
        tfQuantity = new javax.swing.JTextField();
        cbSearchBy = new javax.swing.JComboBox();
        bSold = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lSales = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Items");

        lBack.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        lBack.setForeground(new java.awt.Color(51, 51, 255));
        lBack.setText("Back");
        lBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lBackMouseClicked(evt);
            }
        });

        bAdd.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        bAdd.setForeground(new java.awt.Color(0, 153, 51));
        bAdd.setText("Add");
        bAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddActionPerformed(evt);
            }
        });

        bDelete.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        bDelete.setForeground(new java.awt.Color(255, 0, 51));
        bDelete.setText("Delete");
        bDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDeleteActionPerformed(evt);
            }
        });

        lName.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        lName.setText("Name");

        lBatchNumber.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        lBatchNumber.setText("Batch Number");

        lExpiry.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        lExpiry.setText("Expiry (Year Month Day)");

        tfName.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N

        tfBatchNumber.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N

        tfExpiry.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N

        bClear.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        bClear.setText("Clear");
        bClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bClearActionPerformed(evt);
            }
        });

        tblItem.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        tblItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name", "Batch Number", "Expiry", "Amount", "Quantity"
            }
        ));
        tblItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblItemMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblItem);

        tfSearchBy.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        tfSearchBy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfSearchByActionPerformed(evt);
            }
        });
        tfSearchBy.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfSearchByKeyTyped(evt);
            }
        });

        lSearchBy.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        lSearchBy.setText("Search By");

        lAmount.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        lAmount.setText("Amount");

        lQuantity.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        lQuantity.setText("Quantity");

        tfAmount.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N

        tfQuantity.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N

        cbSearchBy.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        cbSearchBy.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ItemName", "BatchNumber", "Expiry", "Amount", "Quantity" }));
        cbSearchBy.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbSearchByItemStateChanged(evt);
            }
        });
        cbSearchBy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSearchByActionPerformed(evt);
            }
        });

        bSold.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        bSold.setText("Sold");
        bSold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSoldActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        jLabel1.setText("Rs.");

        lSales.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        lSales.setForeground(new java.awt.Color(51, 51, 255));
        lSales.setText("Sales");
        lSales.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lSalesMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(380, 380, 380)
                        .addComponent(lName)
                        .addGap(329, 329, 329)
                        .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(380, 380, 380)
                        .addComponent(lBatchNumber)
                        .addGap(275, 275, 275)
                        .addComponent(tfBatchNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(380, 380, 380)
                        .addComponent(lExpiry)
                        .addGap(205, 205, 205)
                        .addComponent(tfExpiry, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(534, 534, 534)
                        .addComponent(bAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(79, 79, 79)
                        .addComponent(bDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(300, 300, 300)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 730, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(356, 356, 356)
                        .addComponent(bClear, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(lSearchBy)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbSearchBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfSearchBy, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(bSold, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(lBack)
                        .addGap(33, 33, 33)
                        .addComponent(lSales))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(380, 380, 380)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lQuantity)
                                .addGap(312, 312, 312)
                                .addComponent(tfQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lAmount)
                                .addGap(290, 290, 290)
                                .addComponent(jLabel1)
                                .addGap(8, 8, 8)
                                .addComponent(tfAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lBack)
                    .addComponent(lSales))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(lName, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(lBatchNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tfBatchNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(lExpiry, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tfExpiry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lAmount)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lQuantity))
                    .addComponent(tfQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfSearchBy, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbSearchBy, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lSearchBy, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bSold, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bClear, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    
    
    
    
    
    //back
    private void lBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lBackMouseClicked
        new Home().setVisible(true);
        dispose();
    }//GEN-LAST:event_lBackMouseClicked
    
    
    
    
    
    
    
    
    
    //ADD BUTTON
    private void bAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddActionPerformed

        try{
            
            String name = tfName.getText().trim();
            String batchnumber = tfBatchNumber.getText().trim();
            String expiry = tfExpiry.getText().trim();
            
                    
            Float amount = Float.parseFloat(tfAmount.getText().trim());
            Integer quantity = Integer.parseInt(tfQuantity.getText().trim());
        
        
            String sql = "Insert Into Item (ItemName, BatchNumber, Expiry, Amount, Quantity) "
                + "Values('" + name + "','" + batchnumber + "','" + expiry + "','" + amount + "','" + quantity + "')";
        
               
            st = con.createStatement();
            st.executeUpdate(sql);
            con.commit();
            updateTable();
            JOptionPane.showMessageDialog(null, "Item Added.");
             
        }
        catch(HeadlessException e){
                JOptionPane.showMessageDialog(null, e);
            
        } catch (NumberFormatException e) {

                JOptionPane.showMessageDialog(null, "Check format of the fields");

        } catch (SQLException e) {

                JOptionPane.showMessageDialog(null, "Check if Batch Number is unique");

        }
        
    }//GEN-LAST:event_bAddActionPerformed

    
    
    
    
    //DELETE BUTTON
    private void bDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDeleteActionPerformed
        
        try{
            String name = tfName.getText().trim();
            String batchnumber = tfBatchNumber.getText().trim();
            String expiry = tfExpiry.getText().trim();
            Float amount = Float.parseFloat(tfAmount.getText().trim());
            Integer quantity = Integer.parseInt(tfQuantity.getText().trim());
        
            String sql = "Delete from Item where BatchNumber = '" + batchnumber +  "'";
               
            st = con.createStatement();
            st.executeUpdate(sql);
            con.commit();
            updateTable();
            JOptionPane.showMessageDialog(null, "Item Deleted.");
                
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        
    }//GEN-LAST:event_bDeleteActionPerformed

    
    
    
    
    
    private void bClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bClearActionPerformed
        tfName.setText(" ");
        tfBatchNumber.setText(" ");
        tfExpiry.setText(" ");
        tfAmount.setText(" ");
        tfQuantity.setText(" ");
    }//GEN-LAST:event_bClearActionPerformed

    
    
    
    
    
    
    
    
    //updates combovalue whenever "Search by" is changed
    private void tfSearchByActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfSearchByActionPerformed
        combovalue = (String)cbSearchBy.getSelectedItem();
    }//GEN-LAST:event_tfSearchByActionPerformed

    
    
    
    
    
    
    
    
    
    private void tfSearchByKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfSearchByKeyTyped
        String searchby = tfSearchBy.getText();
        
        try{
           
            st = con.createStatement();
            String sql = "Select ItemName, BatchNumber, Expiry, Amount, Quantity from Item Where " + combovalue + " Like '"+searchby+"%'";
            
            rs = st.executeQuery(sql);
        
            tblItem.setModel(DbUtils.resultSetToTableModel(rs));
        
        }catch(Exception e){
            //JOptionPane.showMessageDialog(null, e);
        } 
    }//GEN-LAST:event_tfSearchByKeyTyped

    
    
    
    
    
    private void tblItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblItemMouseClicked
        try{
            int row = tblItem.getSelectedRow();
            
            String Table_click = (tblItem.getModel().getValueAt(row, 1).toString());
            
            String sql = "Select * from Item Where BatchNumber = '" + Table_click + "'";
            
            
            rs = st.executeQuery(sql);
            
            if(rs.next()){
                
                tfName.setText(rs.getString("ItemName"));
                
                tfBatchNumber.setText(rs.getString("BatchNumber"));
                
                tfExpiry.setText(rs.getString("Expiry"));
                
                
                tfAmount.setText(rs.getString("Amount"));
                
                tfQuantity.setText(rs.getString("Quantity"));
            }
            
        }catch(Exception e){ 
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_tblItemMouseClicked

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    private void cbSearchByItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbSearchByItemStateChanged
        combovalue = (String)cbSearchBy.getSelectedItem();
        
    }//GEN-LAST:event_cbSearchByItemStateChanged

    
    
    
    
    
    
    
    
    
    
    
    private void cbSearchByActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSearchByActionPerformed
        combovalue = (String)cbSearchBy.getSelectedItem();
    }//GEN-LAST:event_cbSearchByActionPerformed

    
    
    
    
    
    
    
    
    
    
    private void bSoldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSoldActionPerformed
        try{
            String name = tfName.getText();
            String batchnumber = tfBatchNumber.getText();
            String expiry = tfExpiry.getText();
            Float amount = Float.parseFloat(tfAmount.getText());
            Integer quantity = Integer.parseInt(tfQuantity.getText());
            
            Integer soldnumber = Integer.parseInt(JOptionPane.showInputDialog("How Many Sold?"));
            quantity = quantity - soldnumber;
            
            String sql = "UPDATE Item SET Quantity = '" + quantity + "' WHERE BatchNumber = '" + batchnumber + "'";
            
            
            st = con.createStatement();
            st.executeUpdate(sql);
            con.commit();
            updateTable();
            JOptionPane.showMessageDialog(null, "Item Updated.");
            
            this.revenue = (amount * soldnumber);
            
            updateSales();
            
        } catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        
    }//GEN-LAST:event_bSoldActionPerformed

    
    
    
    
    
    
    
    private void lSalesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lSalesMouseClicked
        new Sales().setVisible(true);
        dispose();
    }//GEN-LAST:event_lSalesMouseClicked

    
    
    
    


    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Items.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Items.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Items.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Items.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Items().setVisible(true);
            }
        });
        
        
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAdd;
    private javax.swing.JButton bClear;
    private javax.swing.JButton bDelete;
    private javax.swing.JButton bSold;
    private javax.swing.JComboBox cbSearchBy;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lAmount;
    private javax.swing.JLabel lBack;
    private javax.swing.JLabel lBatchNumber;
    private javax.swing.JLabel lExpiry;
    private javax.swing.JLabel lName;
    private javax.swing.JLabel lQuantity;
    private javax.swing.JLabel lSales;
    private javax.swing.JLabel lSearchBy;
    private javax.swing.JTable tblItem;
    private javax.swing.JTextField tfAmount;
    private javax.swing.JTextField tfBatchNumber;
    private javax.swing.JTextField tfExpiry;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfQuantity;
    private javax.swing.JTextField tfSearchBy;
    // End of variables declaration//GEN-END:variables
    
    
    
    
    
    
    private void database() {
        
        try{
            //url = "jdbc:ucanaccess://D:/Programming/Netbeans Projects/SadhanaPharmacy/SP.mdb";
            url = "jdbc:ucanaccess://SP.mdb";
            con = DriverManager.getConnection(url); 
            

            
        }catch(Exception e){
            System.out.println("Could Not Connect to Database" +e);
        }   
    }
    
    
    
    

    private void updateSales() {
        try{
       
            String sql = "INSERT INTO Sales (Revenue) Values ('" + revenue  + "')";
            
            st = con.createStatement();
            st.executeUpdate(sql);
            con.commit();   
            

        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }





    
}